// <auto-generated />
using CryptoTaxCalculator.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CryptoTaxCalculator.Migrations
{
    [DbContext(typeof(CryptoTaxCalculatorContext))]
    partial class CryptoTaxCalculatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoTaxCalculator.Models.CoinModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cap24hrChange");

                    b.Property<long>("MarketCap");

                    b.Property<string>("Name");

                    b.Property<decimal>("Percent");

                    b.Property<double>("Price");

                    b.Property<bool>("Shapeshift");

                    b.Property<long>("Supply");

                    b.Property<string>("Symbol");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<long>("UsdVolume");

                    b.Property<long>("Volume");

                    b.Property<double>("VwapData");

                    b.Property<double>("VwapDataBtc");

                    b.HasKey("Id");

                    b.ToTable("CoinModel");
                });
#pragma warning restore 612, 618
        }
    }
}
